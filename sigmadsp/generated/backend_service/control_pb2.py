# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: control.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\rcontrol.proto\x12\x18sigmadsp.backend_service\"D\n\x0c\x43hangeVolume\x12\x13\n\x0bname_tokens\x18\x01 \x03(\t\x12\r\n\x05value\x18\x02 \x01(\x01\x12\x10\n\x08relative\x18\x03 \x01(\x08\"e\n\x17\x43ontrolParameterRequest\x12?\n\rchange_volume\x18\x01 \x01(\x0b\x32&.sigmadsp.backend_service.ChangeVolumeH\x00\x42\t\n\x07\x63ommand\"!\n\x0eLoadParameters\x12\x0f\n\x07\x63ontent\x18\x01 \x03(\t\"9\n\x08Register\x12\x0f\n\x07\x61\x64\x64ress\x18\x01 \x01(\r\x12\x0e\n\x06length\x18\x02 \x01(\r\x12\x0c\n\x04\x64\x61ta\x18\x03 \x03(\x0c\"\x8a\x02\n\x0e\x43ontrolRequest\x12\x13\n\treset_dsp\x18\x01 \x01(\x08H\x00\x12\x18\n\x0ehard_reset_dsp\x18\x02 \x01(\x08H\x00\x12\x43\n\x0fload_parameters\x18\x03 \x01(\x0b\x32(.sigmadsp.backend_service.LoadParametersH\x00\x12;\n\rread_register\x18\x04 \x01(\x0b\x32\".sigmadsp.backend_service.RegisterH\x00\x12<\n\x0ewrite_register\x18\x05 \x01(\x0b\x32\".sigmadsp.backend_service.RegisterH\x00\x42\t\n\x07\x63ommand\"3\n\x0f\x43ontrolResponse\x12\x0f\n\x07success\x18\x01 \x01(\x08\x12\x0f\n\x07message\x18\x02 \x01(\t2\xdc\x01\n\x07\x42\x61\x63kend\x12^\n\x07\x63ontrol\x12(.sigmadsp.backend_service.ControlRequest\x1a).sigmadsp.backend_service.ControlResponse\x12q\n\x11\x63ontrol_parameter\x12\x31.sigmadsp.backend_service.ControlParameterRequest\x1a).sigmadsp.backend_service.ControlResponseb\x06proto3')



_CHANGEVOLUME = DESCRIPTOR.message_types_by_name['ChangeVolume']
_CONTROLPARAMETERREQUEST = DESCRIPTOR.message_types_by_name['ControlParameterRequest']
_LOADPARAMETERS = DESCRIPTOR.message_types_by_name['LoadParameters']
_REGISTER = DESCRIPTOR.message_types_by_name['Register']
_CONTROLREQUEST = DESCRIPTOR.message_types_by_name['ControlRequest']
_CONTROLRESPONSE = DESCRIPTOR.message_types_by_name['ControlResponse']
ChangeVolume = _reflection.GeneratedProtocolMessageType('ChangeVolume', (_message.Message,), {
  'DESCRIPTOR' : _CHANGEVOLUME,
  '__module__' : 'control_pb2'
  # @@protoc_insertion_point(class_scope:sigmadsp.backend_service.ChangeVolume)
  })
_sym_db.RegisterMessage(ChangeVolume)

ControlParameterRequest = _reflection.GeneratedProtocolMessageType('ControlParameterRequest', (_message.Message,), {
  'DESCRIPTOR' : _CONTROLPARAMETERREQUEST,
  '__module__' : 'control_pb2'
  # @@protoc_insertion_point(class_scope:sigmadsp.backend_service.ControlParameterRequest)
  })
_sym_db.RegisterMessage(ControlParameterRequest)

LoadParameters = _reflection.GeneratedProtocolMessageType('LoadParameters', (_message.Message,), {
  'DESCRIPTOR' : _LOADPARAMETERS,
  '__module__' : 'control_pb2'
  # @@protoc_insertion_point(class_scope:sigmadsp.backend_service.LoadParameters)
  })
_sym_db.RegisterMessage(LoadParameters)

Register = _reflection.GeneratedProtocolMessageType('Register', (_message.Message,), {
  'DESCRIPTOR' : _REGISTER,
  '__module__' : 'control_pb2'
  # @@protoc_insertion_point(class_scope:sigmadsp.backend_service.Register)
  })
_sym_db.RegisterMessage(Register)

ControlRequest = _reflection.GeneratedProtocolMessageType('ControlRequest', (_message.Message,), {
  'DESCRIPTOR' : _CONTROLREQUEST,
  '__module__' : 'control_pb2'
  # @@protoc_insertion_point(class_scope:sigmadsp.backend_service.ControlRequest)
  })
_sym_db.RegisterMessage(ControlRequest)

ControlResponse = _reflection.GeneratedProtocolMessageType('ControlResponse', (_message.Message,), {
  'DESCRIPTOR' : _CONTROLRESPONSE,
  '__module__' : 'control_pb2'
  # @@protoc_insertion_point(class_scope:sigmadsp.backend_service.ControlResponse)
  })
_sym_db.RegisterMessage(ControlResponse)

_BACKEND = DESCRIPTOR.services_by_name['Backend']
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _CHANGEVOLUME._serialized_start=43
  _CHANGEVOLUME._serialized_end=111
  _CONTROLPARAMETERREQUEST._serialized_start=113
  _CONTROLPARAMETERREQUEST._serialized_end=214
  _LOADPARAMETERS._serialized_start=216
  _LOADPARAMETERS._serialized_end=249
  _REGISTER._serialized_start=251
  _REGISTER._serialized_end=308
  _CONTROLREQUEST._serialized_start=311
  _CONTROLREQUEST._serialized_end=577
  _CONTROLRESPONSE._serialized_start=579
  _CONTROLRESPONSE._serialized_end=630
  _BACKEND._serialized_start=633
  _BACKEND._serialized_end=853
# @@protoc_insertion_point(module_scope)
